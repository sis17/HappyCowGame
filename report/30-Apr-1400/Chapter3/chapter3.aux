\relax 
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Implementation}{28}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Overview}{28}}
\citation{jQuery}
\citation{AngularOverBB}
\citation{AngularBootstrap}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Working with AngularJS}{29}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}Bootstrap Library}{29}}
\citation{AngularResource}
\citation{Restangular}
\citation{APISecurity}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}Alerts}{30}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.3}Restangular}{30}}
\citation{APISecurity}
\citation{ClientStorage}
\citation{reference}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.4}Storage and Security}{31}}
\@writefile{toc}{\contentsline {section}{\numberline {3.3}Positions, and their Complexity}{31}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.1}A Recursive Search}{32}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces On the left is a visual representation of the arrangement of seven positions as a graph. On the right is a diagram of the result of a traversal on such a graph. Beginning at position 1, each link between nodes is followed until 3 steps (a depth of 3) have been taken. This tree would then be sent to the client, and each position drawn in place.}}{32}}
\newlabel{3_recursive_search}{{3.1}{32}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.2}Traversing in Levels}{32}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces This shows how a tree was drawn by the client. No order was given for drawing, so starting with position 1, the right-most link was followed (order). Therefore positions to the right of the tree were hidden by the same positions drawn after. The position that should have been drawn first is shown in green, yet the incorrect routes, shown in red which take more movements, were shown.}}{33}}
\newlabel{3_recursive_search_wrong}{{3.2}{33}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces Positions in green are reached, positions in red are excluded because they have already been included. Positions in orange are not displayed because their parents are excluded. Once again, the shortest route to position 3 is not taken.}}{33}}
\newlabel{3_recursive_exclude_wrong}{{3.3}{33}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.3}Improving Efficiency}{33}}
\citation{APISecurity}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.4}Checking for Obstacles}{34}}
\@writefile{toc}{\contentsline {section}{\numberline {3.4}Card and Event Actions}{34}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.1}Complex Specific Actions}{34}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.2}Cow Events}{35}}
\@writefile{toc}{\contentsline {section}{\numberline {3.5}Updating The Client}{35}}
\@writefile{toc}{\contentsline {section}{\numberline {3.6}Crowd Games}{36}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6.1}Designing for Crowd Games}{36}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6.2}Changing Accounts}{37}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6.3}Changing User Authentication}{37}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces Steps of traversing the example graph, one set of links at a time. The resulting tree is shown at the end.}}{38}}
\newlabel{3_levels}{{3.4}{38}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.5}{\ignorespaces The inefficient, previous method is shown above. The method below shows the change, which made rendering positions much faster. The most expensive step was building a recursive tree of possible positions. Consider a block of positions, each with four links. This can quickly create a maze of possible solutions. The recursively built tree tried to represent every route, whereas a tree built in layers merely presented an allowed subsection of the graph.}}{39}}
\newlabel{3_efficient}{{3.5}{39}}
\@setckpt{Chapter3/chapter3}{
\setcounter{page}{40}
\setcounter{equation}{0}
\setcounter{enumi}{4}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{3}
\setcounter{section}{6}
\setcounter{subsection}{3}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{5}
\setcounter{table}{0}
\setcounter{parentequation}{0}
\setcounter{subfigure}{0}
\setcounter{lofdepth}{1}
\setcounter{subtable}{0}
\setcounter{lotdepth}{1}
\setcounter{float@type}{4}
}
